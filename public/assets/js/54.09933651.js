(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{604:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("上一篇文章我们深入了解了I/O多路复用的三种实现形式，select/poll/epoll。")]),t._v(" "),a("p",[t._v("那Netty是使用哪种实现的I/O多路复用呢？这个问题，得从Java NIO包说起。")]),t._v(" "),a("p",[t._v("Netty实际上也是一个封装好的框架，它的网络I/O本质上还是使用了Java的NIO包(New IO，不是网络I/O模型的NIO，Nonblocking IO)包。所以，从网络I/O模型到Netty，我们还需要了解下Java NIO包。")]),t._v(" "),a("p",[t._v("本文预计阅读时间 5 分钟，将重点回答以下几个问题：")]),t._v(" "),a("ul",[a("li",[t._v("如何用Java NIO包实现一个服务端")]),t._v(" "),a("li",[t._v("Java NIO包如何实现I/O多路复用模型")]),t._v(" "),a("li",[t._v("有了Java NIO包，为什么还要封装一个Netty?")])]),t._v(" "),a("h2",{attrs:{id:"_1-先来看一个java-nio服务端的例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-先来看一个java-nio服务端的例子"}},[t._v("#")]),t._v(" 1.先来看一个Java NIO服务端的例子")]),t._v(" "),a("p",[t._v("上一篇文章我们已经了解了I/O多路复用的实现形式。\n就是多个的进程的IO可以注册到一个复用器（selector）上，然后用一个进程调用select，select会监听所有注册进来的IO。")]),t._v(" "),a("p",[t._v("NIO包做了对应的实现。如下图所示。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455915.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("有一个统一的selector负责监听所有的Channel。这些channel中只要有一个有IO动作，就可以通过Selector.select（）方法检测到，并且使用selectedKeys得到这些有IO的channel，然后对它们调用相应的IO操作。")]),t._v(" "),a("p",[t._v("我们来个简单的demo做一下演示。如何使用NIO中三个核心组件（Buffer缓冲区、Channel通道、Selector选择器）来编写一个服务端程序。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioDemo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.创建channel")]),t._v("\n            ServerSocketChannel socketChannel1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ServerSocketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置为非阻塞模式，默认是阻塞的")]),t._v("\n            socketChannel1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureBlocking")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            socketChannel1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("socket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("InetSocketAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8811")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            ServerSocketChannel socketChannel2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ServerSocketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            socketChannel2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureBlocking")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            socketChannel2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("socket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("InetSocketAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8822")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.创建selector，并将channel1和channel2进行注册。")]),t._v("\n            Selector selector "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            socketChannel1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SelectionKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OP_ACCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            socketChannel2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SelectionKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OP_ACCEPT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.一直阻塞直到有至少有一个通道准备就绪")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" readChannelCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                Set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SelectionKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" selectionKeys "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectedKeys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                Iterator"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SelectionKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" selectionKeys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.轮训已经就绪的通道")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    SelectionKey key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5.判断准备就绪的事件类型，并作相应处理")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAcceptable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建新的连接，并且把连接注册到selector上，并且声明这个channel只对读操作感兴趣。")]),t._v("\n                        ServerSocketChannel serverSocketChannel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ServerSocketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("channel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        SocketChannel socketChannel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serverSocketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        socketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configureBlocking")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        socketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SelectionKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OP_READ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isReadable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        SocketChannel socketChannel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SocketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("channel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        ByteBuffer readBuff "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ByteBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        socketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readBuff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        readBuff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"received : "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readBuff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        socketChannel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IOException e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br")])]),a("p",[t._v("通过这个代码示例，我们能清楚地了解如何用Java NIO包实现一个服务端：")]),t._v(" "),a("ul",[a("li",[t._v("1）创建channel1和channel2，分别监听特定端口。")]),t._v(" "),a("li",[t._v("2）创建selector，并将channel1和channel2进行注册。")]),t._v(" "),a("li",[t._v("3）selector.select()一直阻塞,直到有至少有一个通道准备就绪。")]),t._v(" "),a("li",[t._v("4）轮训已经就绪的通道")]),t._v(" "),a("li",[t._v("5）并根据事件类型做出相应的响应动作。")])]),t._v(" "),a("p",[t._v("程序启动后，会一直阻塞在selector.select()。\n通过浏览器调用localhost:8811 或者 localhost:8822就能触发我们的服务端代码了。")]),t._v(" "),a("h2",{attrs:{id:"_2-java-nio包如何实现i-o多路复用模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-java-nio包如何实现i-o多路复用模型"}},[t._v("#")]),t._v(" 2.Java NIO包如何实现I/O多路复用模型")]),t._v(" "),a("p",[t._v("上文演示的Java NIO服务端已经比较清楚地展示了使用NIO编写服务端程序的过程。")]),t._v(" "),a("p",[t._v("那这个过程中如何实现了I/O多路复用的呢？")]),t._v(" "),a("p",[t._v("我们得深入看下selector的实现。")]),t._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.创建selector，并将channel1和channel2进行注册。 ")]),t._v("\nSelector selector "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("从open这里开始吧。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455083.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("这里用了一个SelectorProvider来创建selector。")]),t._v(" "),a("p",[t._v("进入SelectorProvider.provider(),看到具体的provider是由\nsun.nio.ch.DefaultSelectorProvider创建的，对应的方法是：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455235.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("咦？原来不同的操作系统会提供不同的provider对象。这里包括了PollSelectorProvider、EPollSelectorProvide等。")]),t._v(" "),a("p",[t._v("名字是不是有点眼熟？")]),t._v(" "),a("p",[t._v("没错，跟我们上一篇文章分析过的I/O多路复用的不同实现方式poll/epoll有关。")]),t._v(" "),a("p",[t._v("我们选择默认的\nsun.nio.ch.PollSelectorProvider往下看看。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455364.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("OK，找到了实现类PollSelectorImpl。")]),t._v(" "),a("p",[t._v("然后，通过以下调用:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455566.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("找到最终的native方法poll0。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455624.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("是不是仍然很眼熟？")]),t._v(" "),a("p",[t._v("没错！跟我们上一篇文章分析过的poll函数是一致的。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pollfd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nfds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("绕了这么久，到最后，还是找到了我们聊过I/O多路复用的 poll 实现。")]),t._v(" "),a("p",[t._v("至此，我们终于把Java NIO和 I/O多路复用模型串联起来了。")]),t._v(" "),a("p",[t._v("Java NIO包使用selector，实现了I/O多路复用模型。")]),t._v(" "),a("p",[t._v("同时，在不同的操作系统中，会有不同的poll/epoll选择。")]),t._v(" "),a("h2",{attrs:{id:"_3-为什么还需要netty呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-为什么还需要netty呢"}},[t._v("#")]),t._v(" 3.为什么还需要Netty呢？")]),t._v(" "),a("p",[t._v("那既然已经有了NIO包了，我们可以自己手动编写服务框架了，为什么还需要封装一个Netty框架呢？有什么好处呢？")]),t._v(" "),a("p",[t._v("好处当然是有很多了！我们从一开始实现的demo说起。")]),t._v(" "),a("h3",{attrs:{id:"_3-1-设计模式的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-设计模式的优化"}},[t._v("#")]),t._v(" 3.1 设计模式的优化")]),t._v(" "),a("p",[t._v("我们的demo确实已经能够工作了，但是还是有比较明显的问题。第4步（轮询已经就绪的通道）和第5步（对事件作相应处理）是在同一个线程中的，当事件处理比较耗时甚至阻塞时，整个流程就会阻塞了。")]),t._v(" "),a("p",[t._v("我们使用的实际上就是 “单Reactor单线程” 设计模式。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455886.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("这种模型在Reactor中负责监听端口、接收请求，如果是连接事件交给acceptor处理，如果是读写事件和业务处理就交给handler处理，但始终只有一个线程执行所有的事情。")]),t._v(" "),a("p",[t._v("为了提高性能，我们理所当然相当可以把事件处理交给线程池，那就可以演进为 “单Reactor多线程” 设计模式。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455145.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("这种模型和第一种模型的主要区别是把业务处理从之前的单一线程脱离出来，换成线程池处理。Reactor线程只处理连接事件、读写事件，所有业务处理都交给线程池，充分利用多核机器的资源，提高性能。")]),t._v(" "),a("p",[t._v("但是这仍然不够！")]),t._v(" "),a("p",[t._v("我们可以发现，一个Reactor线程承担了所有的网络事件，例如监听和响应，高并发场景下单线程存在性能问题。")]),t._v(" "),a("p",[t._v("为了充分利用多核能力，可以构建两个 Reactor，主 Reactor 单独监听server socket，accept新连接，然后将建立的 SocketChannel 注册给指定的从 Reactor，从Reactor再执行事件的读写、分发，把业务处理就扔给worker线程池完成。这就演进为 ”主从Reactor模式“ 设计模式。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pic-new-1304161434.cos.ap-guangzhou.myqcloud.com/img/202303291455870.png",alt:"从I/O多路复用到Netty，还要跨过Java NIO包"}})]),t._v(" "),a("p",[t._v("所以，如果有人直接帮我们 封装好这样的设计模式 ，是不是太好了？")]),t._v(" "),a("blockquote",[a("p",[t._v("没错，Netty就是这样的“活雷锋”!\nNetty就使用了主从Reactor模式封装了Java NIO包的使用，大大提高了性能。")])]),t._v(" "),a("h4",{attrs:{id:"_3-2-其他优点-以后的核心知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-其他优点-以后的核心知识点"}},[t._v("#")]),t._v(" 3.2 其他优点 (以后的核心知识点）")]),t._v(" "),a("p",[t._v("除了封装了高性能的设计模式外，Netty还有许多其他优点：")]),t._v(" "),a("ul",[a("li",[t._v("稳定性。 Netty 更加可靠稳定，修复和完善了 JDK NIO 较多已知问题，包括 select 空转导致 CPU 消耗 100%、keep-alive 检测等问题。")]),t._v(" "),a("li",[t._v("性能优化。对象池复用技术。 Netty 通过复用对象，避免频繁创建和销毁带来的开销。零拷贝技术。 除了操作系统级别的零拷贝技术外，Netty 提供了面向用户态的零拷贝技术，在 I/O 读写时直接使用 DirectBuffer，避免了数据在堆内存和堆外内存之间的拷贝。")]),t._v(" "),a("li",[t._v("便捷性。 Netty 提供了很多常用的工具，例如行解码器、长度域解码器等。如果我们使用JDK NIO包，那么这些常用工具都需要自己进行实现。")])]),t._v(" "),a("p",[t._v("正是因为 Netty 做到了高性能、高稳定性、高易用性，完美弥补了 Java NIO 的不足，所以在我们在网络编程时，首选Netty，而不是自己直接使用Java NIO。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("回顾一下前几章内容，到目前为止，我们从网络I/O模型出发，一步步了解到了Netty的网络I/O模型。")]),t._v(" "),a("p",[t._v("对于I/O多路复用、Java NIO包 和 Netty 的关系也有了全面的认识。")]),t._v(" "),a("p",[t._v("有了这些知识基础，我们初步了解了Netty是什么，为什么使用Netty。")]),t._v(" "),a("p",[t._v("后面的文章，我们将逐步展开Netty框架的核心知识点，敬请期待。")])])}),[],!1,null,null,null);s.default=e.exports}}]);